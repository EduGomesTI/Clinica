# version: '3.9'

services:
  webapi:
      image: clinica.webapi:latest
      container_name: webapi
      build:
        context: .
        dockerfile: Clinica.Main.WebApi/Dockerfile
      environment:
        - RabbitMq__HostName=rabbitmq
        - RabbitMq__User=admin
        - RabbitMq__Password=1234
        - ConnectionStrings__Database=Server=postgres;Port=5432;UserId=postgres;Password=12345;
      ports:
        - "8080:8080"
        - "8081:8081"
      networks:
        - clinica_net
      depends_on:
        rabbitmq:
            condition: service_healthy
      restart: always

  PatientsWorker:
    image: clinica.patients_worker:latest
    container_name: patients_worker
    build:
      context: .
      dockerfile: Clinica.Patients.Worker/Dockerfile
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__User=admin
      - RabbitMq__Password=1234
      - ConnectionStrings__Database=Server=postgres;Port=5432;UserId=postgres;Password=12345;
    networks:
      - clinica_net
    depends_on:
      webapi:
          condition: service_started
    restart: always

  DoctorsWorker:
    image: clinica.doctors_worker:latest
    container_name: doctors_worker
    build:
      context: .
      dockerfile: Clinica.Doctors.Worker/Dockerfile
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__User=admin
      - RabbitMq__Password=1234
      - ConnectionStrings__Database=Server=postgres;Port=5432;User Id=postgres;Password=12345;
    networks:
      - clinica_net
    depends_on:
      webapi:
          condition: service_started
    restart: always

  SchedulingsWorker:
    image: clinica.schedulings_worker:latest
    container_name: schedulings_worker
    build:
      context: .
      dockerfile: Clinica.Schedulings.Worker/Dockerfile
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__User=admin
      - RabbitMq__Password=1234
      - ConnectionStrings__Database=Server=postgres;Port=5432;User Id=postgres;Password=12345;
    networks:
      - clinica_net
    depends_on:
      webapi:
          condition: service_started
    restart: always

  Send_EmailsWorker:
    image: clinica.send_emails_worker:latest
    container_name: send_emails_worker
    build:
      context: .
      dockerfile: Clinica.Send_Emails.Worker/Dockerfile
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__User=admin
      - RabbitMq__Password=1234
      - ConnectionStrings__Database=Server=postgres;Port=5432;User Id=postgres;Password=12345;
    networks:
      - clinica_net
    depends_on:
      webapi:
          condition: service_started
    restart: always

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-12345}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - clinica_net
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data_vol:/var/lib/rabbitmq/
      - rabbitmq_log_vol:/var/log/rabbitmq
    networks:
      - clinica_net
    environment:
      - RABBITMQ_DEFAULT_USER = admin
      - RABBITMQ_DEFAULT_PASS = 1234
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - clinica_net
    restart: unless-stopped

networks:
  clinica_net:

volumes:
  postgres:
  pgadmin:
  rabbitmq_data_vol:
  rabbitmq_log_vol:
